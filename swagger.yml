swagger: "2.0"
info:
  version: "0.0.1"
  title: "User Service"
host: "user-service"
basePath: "/v1"
tags:
  - name: "user"
schemes:
  - "http"
paths:
  /user:
    post:
      tags:
        - "user"
      summary: "Add User(s)"
      description: ""
      operationId: "create"
      consumes:
        - "application/json"
      produces:
        - "application/stream+json"
      parameters:
        - in: "body"
          name: "body"
          description: "User object"
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        201:
          description: "User created"
          schema:
            $ref: "#/definitions/User"
        400:
          description: "Bad request"
    get:
      tags:
        - "user"
      summary: "List users"
      description: "Returns users as "
      operationId: "list"
      produces:
        - "application/stream+json"
      responses:
        200:
          description: "Streaming Users"
          schema:
            $ref: "#/definitions/User"
  /user/{userUuid}:
    get:
      tags:
        - "user"
      summary: "Find user by Uuid"
      description: "Returns a single user"
      operationId: "findByUuid"
      produces:
        - "application/json"
      parameters:
        - name: "userUuid"
          in: "path"
          description: "ID of pet to return"
          required: true
          type: "integer"
          format: "int64"
      responses:
        200:
          description: "User found"
          schema:
            $ref: "#/definitions/User"
        404:
          description: "Not found"
    put:
      tags:
        - "user"
      summary: "Update User data"
      description: ""
      operationId: "update"
      consumes:
        - "application/x-www-form-urlencoded"
      produces:
        - "application/json"
      parameters:
        - name: "userUuid"
          in: "path"
          description: "ID of pet that needs to be updated"
          required: true
          type: "integer"
          format: "int64"
      responses:
        200:
          description: "User updated"
          schema:
            $ref: "#/definitions/User"
        400:
          description: "Bad request"
        404:
          description: "Not found"

    delete:
      tags:
        - "user"
      summary: "Deletes a user"
      description: "Logical exclusion"
      operationId: "delete"
      parameters:
        - name: "userUuid"
          in: "path"
          required: true
          type: "string"
      responses:
        204:
          description: "User deleted"
        404:
          description: "Not found"

definitions:
  Address:
    type: "object"
    properties:
      address:
        type: "string"
      number:
        type: "integer"
      zipCode:
        type: "string"
  User:
    type: "object"
    properties:
      firstName:
        type: "string"
      lastName:
        type: "string"
      cpf:
        type: "string"
      birthDate:
        type: "string"
        format: "date"
      address:
        $ref: "#/definitions/Address"
      emails:
        type: "array"
        items:
          type: "string"
      phones:
        type: "array"
        items:
          type: "string"

